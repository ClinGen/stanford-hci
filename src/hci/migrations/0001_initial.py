# Generated by Django 5.1.2 on 2024-11-12 23:00

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Allele",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("imgt_name", models.CharField()),
                ("car_id", models.CharField()),
            ],
        ),
        migrations.CreateModel(
            name="Association",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("study_type", models.CharField()),
                ("cohort_type", models.CharField()),
                ("label", models.CharField()),
                ("allele_field_resolution", models.CharField()),
                ("is_haplotype", models.BooleanField()),
                ("zygosity", models.CharField()),
                ("allele_name_in_publication", models.CharField()),
                ("serological", models.BooleanField()),
                ("imputation", models.BooleanField()),
                ("array_data", models.BooleanField()),
                ("low_resolution_typing_ssop", models.BooleanField()),
                ("sanger_sequencing", models.BooleanField()),
                ("whole_exome_sequencing", models.BooleanField()),
                ("whole_genome_sequencing", models.BooleanField()),
                ("high_resolution_typing", models.BooleanField()),
                ("other", models.BooleanField()),
                ("unknown", models.BooleanField()),
                ("reference_panel", models.TextField()),
                ("typing_methods_description", models.TextField()),
                ("phenotypes_in_common", models.CharField()),
                ("common_free_text", models.TextField()),
                ("not_phenotypes", models.CharField()),
                ("not_phenotypes_free_text", models.TextField()),
                ("age_range_type", models.CharField()),
                ("age_range_value_from", models.PositiveIntegerField()),
                ("age_range_value_to", models.PositiveIntegerField()),
                ("age_range_unit", models.CharField()),
                ("reported_ancestry", models.CharField()),
                ("biogeographical_category", models.CharField()),
                ("country_or_countries", models.CharField()),
                ("num_males", models.PositiveIntegerField()),
                ("num_females", models.PositiveIntegerField()),
                ("num_cases_with_variant", models.PositiveIntegerField()),
                (
                    "num_cases_genotyped_or_sequenced",
                    models.PositiveIntegerField(),
                ),
                ("case_frequency", models.CharField()),
                ("num_controls_with_variant", models.PositiveIntegerField()),
                (
                    "num_controls_genotyped_or_sequenced",
                    models.PositiveIntegerField(),
                ),
                ("control_frequency", models.CharField()),
                ("total_cohort_size", models.PositiveIntegerField()),
                ("test_statistic", models.CharField()),
                ("value", models.IntegerField()),
                ("confidence_interval_from", models.IntegerField()),
                ("confidence_interval_to", models.IntegerField()),
                (
                    "standard_error",
                    models.DecimalField(decimal_places=5, max_digits=5),
                ),
                (
                    "p_value",
                    models.DecimalField(decimal_places=5, max_digits=5),
                ),
                ("p_value_type", models.CharField()),
                ("is_conditional", models.BooleanField()),
                ("condition_on", models.TextField()),
                ("direction_of_effect", models.CharField()),
                ("comments", models.TextField()),
                ("score", models.DecimalField(decimal_places=5, max_digits=5)),
            ],
        ),
        migrations.CreateModel(
            name="Disease",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("mondo_id", models.CharField()),
            ],
        ),
        migrations.CreateModel(
            name="Publication",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("publication_id", models.CharField()),
                ("publication_type", models.CharField()),
                ("author", models.CharField()),
                ("year", models.CharField()),
                ("title", models.CharField()),
            ],
        ),
        migrations.CreateModel(
            name="Curator",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("affiliation_id", models.IntegerField()),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Classification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("association", models.ManyToManyField(to="hci.association")),
                (
                    "curator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="hci.curator",
                    ),
                ),
                (
                    "publication",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="hci.publication",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Haplotype",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("chromosome_mapping_order", models.CharField()),
                (
                    "constituent_alleles",
                    models.ManyToManyField(to="hci.allele"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Curation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "allele",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="hci.allele",
                    ),
                ),
                (
                    "classifications",
                    models.ManyToManyField(to="hci.classification"),
                ),
                (
                    "disease",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="hci.disease",
                    ),
                ),
                (
                    "haplotype",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="hci.haplotype",
                    ),
                ),
            ],
        ),
    ]
